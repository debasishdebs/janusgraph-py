#!/usr/bin/env python


from gremlin_python.structure.graph import Graph
from gremlin_python.driver.driver_remote_connection import DriverRemoteConnection
from gremlin_python.process.traversal import P
from janusgraph_python.core.attribute.Text import Text

if __name__ == '__main__':
    URL = 'ws://10.153.22.172:8182/gremlin'
    # serializer = GraphSONMessageSerializer()
    # serializer = GraphSONSerializersV2d0()
    graph = Graph()
    # t = Text()
    g = graph.traversal().withRemote(DriverRemoteConnection(URL, "gOLTP"))
    count = g.V().count().next()
    countInter = g.V().has("partyID", P.gt(100)).count().next()
    countJ = g.V().has("songType", Text.textContains("cover")).count().next()

    count1 = g.V().has("songType", Text.textContains("cover")).count().next()
    count2 = g.V().has("songType", Text.textFuzzy("cover")).count().next()
    count3 = g.V().has("songType", Text.textContainsPrefix("cov")).count().next()
    print("Counting vertices")
    print(count)
    print("Testing predicate 1")
    print(count1)
    print("Testing predicate 2")
    print(count2)
    print("Testing predicate 3")
    print(count3)

    edges = g.V(12336).outE().toList()

    print("Edge Value Map")
    print(edges)
